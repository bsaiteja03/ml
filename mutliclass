from sklearn import datasets 
from sklearn.metrics import confusion_matrix 
from sklearn.model_selection import train_test_split 
iris = datasets.load_iris() 
X = iris.data 
y = iris.target 
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0) 
  
from sklearn.tree import DecisionTreeClassifier 
dtree_model = DecisionTreeClassifier(max_depth = 2).fit(X_train, y_train) 
dtree_predictions = dtree_model.predict(X_test) 
  
cm = confusion_matrix(y_test, dtree_predictions) 

from sklearn import datasets 
from sklearn.metrics import confusion_matrix 
from sklearn.model_selection import train_test_split 
iris = datasets.load_iris() 
X = iris.data 
y = iris.target 
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0) 
from sklearn.svm import SVC 
svm_model_linear = SVC(kernel = 'linear', C = 1).fit(X_train, y_train) 
svm_predictions = svm_model_linear.predict(X_test) 
accuracy = svm_model_linear.score(X_test, y_test) 
cm = confusion_matrix(y_test, svm_predictions) 
print(accuracy)

from sklearn import datasets 
from sklearn.metrics import confusion_matrix 
from sklearn.model_selection import train_test_split 
iris = datasets.load_iris() 
X = iris.data 
y = iris.target 
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0) 
from sklearn.neighbors import KNeighborsClassifier 
knn = KNeighborsClassifier(n_neighbors = 7).fit(X_train, y_train) 
accuracy = knn.score(X_test, y_test) 
print(accuracy)
knn_predictions = knn.predict(X_test)  
cm = confusion_matrix(y_test, knn_predictions) 

from sklearn import datasets 
from sklearn.metrics import confusion_matrix 
from sklearn.model_selection import train_test_split 
  
iris = datasets.load_iris() 
  
X = iris.data 
y = iris.target 
  
X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0) 
  
from sklearn.naive_bayes import GaussianNB 
gnb = GaussianNB().fit(X_train, y_train) 
gnb_predictions = gnb.predict(X_test) 
  
accuracy = gnb.score(X_test, y_test) 
print(accuracy)
  
cm = confusion_matrix(y_test, gnb_predictions) 
